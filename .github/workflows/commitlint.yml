name: Commit Message Lint

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read

env:
  CI: true
  NODE_ENV: production
  TAG_PREFIX: RootService/MKDocs
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
  GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Configure Git identity
        run: |
          git config --global init.defaultBranch main
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Import GPG key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
          KEYGRIP=$(gpg --list-secret-keys --with-colons | awk -F: '/^sec/{print $5; exit}')
          git config --global user.signingkey "$KEYGRIP"
          git config --global commit.gpgsign true
          git config --global gpg.program gpg

      - name: Verify GPG signing setup
        run: |
          if ! git commit -m 'GPG check' --allow-empty; then
            echo '❌ GPG signing failed, aborting.'
            exit 1
          fi
          echo '✅ GPG signing is working.'

      - name: Setup Node.js (LTS)
        uses: actions/setup-node@v5
        with:
          node-version: "lts/*"
          cache: npm
          check-latest: true
          cache-dependency-path: package-lock.json

      - name: Setup Python 3.11
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"
          cache: pip
          check-latest: true
          cache-dependency-path: requirements.txt

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v2
        with:
          chrome-version: stable
          install-chromedriver: true
          install-dependencies: true

      - name: Install Node.js dependencies
        if: hashFiles('package.json') != ''
        run: |
          npm cache clean --force
          npm install --ignore-scripts --no-audit --no-fund --package-lock-only
          npm shrinkwrap

      - name: Install Python dependencies
        if: hashFiles('requirements.txt') != ''
        run: |
          python -m pip install --upgrade pip pip-tools
          pip-compile requirements.in --quiet --no-header --no-annotate
          pip install --use-pep517 --upgrade -r requirements.txt

      - name: Run commitlint on PR commits
        run: npx commitlint --from=${{ github.event.pull_request.base.sha }} --to=${{ github.sha }} --verbose
