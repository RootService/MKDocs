name: Sync Repository Labels

on:
  workflow_dispatch:
  push:
    paths:
      - ".github/labels.yml"

permissions:
  contents: read
  issues: write

env:
  CI: true
  NODE_ENV: production
  TAG_PREFIX: RootService/MKDocs
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:
  sync:
    runs-on: ubuntu-latest
      - name: Configure Git defaultBranch
        run: |
          git config --global init.defaultBranch main

      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Configure Git identity
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Setup GPG signing
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --yes --import
          KEYID=$(gpg --list-secret-keys --with-colons | awk -F: '/^sec/{print $5; exit}')
          git config --global user.signingkey "$KEYID"
          git config --global commit.gpgsign true
          git config --global gpg.program gpg
          git commit --allow-empty -m "GPG signing check" || true

      - name: Setup Node.js (LTS)
        uses: actions/setup-node@v5
        with:
          node-version: "lts/*"
          cache: npm
          check-latest: true
          cache-dependency-path: package.json

      - name: Cache Node.js dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: v1-npm-${{ runner.os }}-${{ hashFiles('package-lock.json', 'package.json') }}
          restore-keys: |
            v1-npm-${{ runner.os }}-

      - name: Install Node.js dependencies
        if: hashFiles('package-lock.json', 'package.json') != ''
        run: |
          npm cache clean --force
          npm install -g npm-check-updates
          ncu -u
          npm install --ignore-scripts --no-audit --no-fund --quiet

      - name: Setup Python 3.11
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"
          cache: pip
          check-latest: true
          cache-dependency-path: requirements.txt

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: v1-pip-${{ runner.os }}-${{ hashFiles('requirements.txt', 'requirements.in') }}

          restore-keys: |
            v1-pip-${{ runner.os }}-

      - name: Install Python dependencies
        if: hashFiles('requirements.txt', 'requirements.in') != ''
        run: |
          python -m pip install --quiet --upgrade pip pip-tools
          if [ -f requirements.in ]; then pip-compile requirements.in --quiet --no-header --no-annotate --upgrade; fi
          if [ -f requirements.txt ]; then pip install --quiet --use-pep517 --upgrade -r requirements.txt; fi

      - name: Sync labels with config
        uses: EndBug/label-sync@v2
        with:
          config-file: .github/labels.yml
          token: ${{ secrets.GITHUB_TOKEN }}
