name: Lighthouse CI

on:
  workflow_run:
    workflows: ["MKDocs CI"]
    types: [completed]

permissions:
  contents: write
  actions: read
  pull-requests: write

env:
  name: lighthouse
  TAG_PREFIX: RootService/MKDocs
  LOG_TAIL_LINES: 500
  CHROME_PATH: /usr/bin/google-chrome

jobs:
  lighthouse:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Download site artifact via API
        run: |
          echo "Fetching artifacts from run ${{ github.event.workflow_run.id }}"
          artifacts_url="${{ github.event.workflow_run.artifacts_url }}"
          curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"                -H "Accept: application/vnd.github.v3+json"                "$artifacts_url" > artifacts.json
          download_url=$(jq -r '.artifacts[0].archive_download_url' artifacts.json)
          curl -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"                -o artifact.zip "$download_url"
          unzip artifact.zip -d site

      - name: Install Lighthouse CI
        run: |
          npm install -g @lhci/cli@latest serve

      - name: Start local server
        run: |
          npx serve ./site -p 8000 -n -s -L > server.log 2>&1 &
          sleep 5

      - name: Run Lighthouse
        run: |
          LHCI_BUILD_CONTEXT__CURRENT_HASH=github-actions \
          npx lhci autorun --config=.lighthouserc.js --output-dir=.lighthouseci || true

      - name: Run Lighthouse Collect
        run: |
          LHCI_BUILD_CONTEXT__CURRENT_HASH=github-actions \
          npx lhci collect --config=.lighthouserc.js --output-dir=.lighthouseci || true

      - name: Run Lighthouse Upload
        run: |
          LHCI_BUILD_CONTEXT__CURRENT_HASH=github-actions \
          npx lhci upload --config=.lighthouserc.js --output-dir=.lighthouseci || true

      - name: Extract Scores
        id: scores
        if: ${{ hashFiles('.lighthouseci/manifest.json') != '' }}
        run: |
          extract_score() {
            key=$1
            score=$(jq -r ".[0].summary.${key}" .lighthouseci/manifest.json)
            percent=$(awk "BEGIN {printf \"%.0f\", $score * 100}")
            echo "${key}=$percent" >> $GITHUB_OUTPUT
          }
          extract_score performance
          extract_score accessibility
          extract_score bestPractices
          extract_score seo

      - name: Upload Lighthouse report
        if: ${{ hashFiles('.lighthouseci/**') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report
          path: .lighthouseci/
          if-no-files-found: error
          retention-days: 5
          include-hidden-files: true

      - name: Upload Screenshot
        if: ${{ hashFiles('lighthouse-screenshot.png') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-screenshot
          path: lighthouse-screenshot.png
          if-no-files-found: error
          retention-days: 5
          include-hidden-files: true

      - name: Lighthouse summary
        id: lighthouse_summary
        if: always()
        run: |
          if [ -z "$(ls -A .lighthouseci 2>/dev/null)" ]; then
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "status=failure" >> $GITHUB_OUTPUT
          fi

      - name: Comment Lighthouse result on PR
        if: ${{ github.event.workflow_run.event == 'pull_request' }}
        uses: actions/github-script@v8
        env:
          TITLE: ${{ github.event.pull_request.title }}
        with:
          result-encoding: string
          retries: 3
          script: |
            function emoji(score) {
              const s = parseInt(score, 10);
              if (s >= 90) return "ðŸŸ¢";
              if (s >= 50) return "ðŸŸ¡";
              return "ðŸ”´";
            }

            const title = process.env.TITLE;
            const pr = context.payload.workflow_run.pull_requests[0];
            const runId = context.runId;
            const artifactUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${runId}`;
            const perf = "${{ steps.scores.outputs.performance }}";
            const access = "${{ steps.scores.outputs.accessibility }}";
            const bp = "${{ steps.scores.outputs.best-practices }}";
            const seo = "${{ steps.scores.outputs.seo }}";
            let body = "ðŸ”Ž **Lighthouse CI completed**\n\n";
            if (perf) body += `${emoji(perf)} Performance: **${perf}/100**\n`;
            if (access) body += `${emoji(access)} Accessibility: **${access}/100**\n`;
            if (bp) body += `${emoji(bp)} Best Practices: **${bp}/100**\n`;
            if (seo) body += `${emoji(seo)} SEO: **${seo}/100**\n`;
            body += `\nðŸ“¦ [Download Lighthouse Report Artifact](${artifactUrl})\nðŸ“¸ [View Screenshot](${artifactUrl})`;
            if (pr) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body
              });
            }
